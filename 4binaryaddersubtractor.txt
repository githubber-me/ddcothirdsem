//Verilog
module full_adder( input a,b,cin, output sum,carry);
    assign sum = a^b^cin;
    assign carry = (a&b)|(a&cin)|(b&cin);
endmodule
module tripple_adder_subs(input[3:0] A,B, input ctrl,output [3:0] S, CO,output C);
    full_adder fa0(A[0],B[0]^ctrl , ctrl , S[0] , CO[0]);
    full_adder fa1(A[1],B[1]^ctrl , CO[0] , S[1] , CO[1]);
    full_adder fa2(A[2],B[2]^ctrl , CO[1] , S[2] , CO[2]);
    full_adder fa3(A[3],B[3]^ctrl , CO[2] , S[3] , CO[3]);
    assign C = CO[3];
endmodule

//Test Bench
initial begin
    A = 4'b0000;
    B= 4'b0000;
    ctrl = 0;
end
    always #10 A = A+1'b1;
    always #20 B = B+1'b1;
endmodule